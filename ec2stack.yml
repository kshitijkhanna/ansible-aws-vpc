---
- name: Setup app stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC setup variables
      include_vars: vars/output_vars

    - name: Import DevOps setup variables
      include_vars: vars/appstack

    - name: Create vprofile ec2 key
      ec2_key:
        name: appstack
        region: "{{region}}"
      register: appstack_out

    - name: Save private key into file ansibleappstack-key.pem
      copy:
        content: "{{appstack_out.key.private_key}}"
        dest: "./ansibleappstack_key.pem"
        mode: 0600
      when: appstack_out.changed

    - name: Create Securiry Group for Load Balancer
      ec2_group:
        name: AnsibleELB-sg
        description: Allow port 80 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: AnsibleELBSG_out

    - name: Create Securiry Group for APP Stack
      ec2_group:
        name: appstack-sg
        description: Allow port 22 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{AnsibleELBSG_out.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionSGid}}"
      register: appStackSG_out

    - name: Update Securiry Group with its own sg id
      ec2_group:
        name: appstack-sg
        description: Allow port 22 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{appStackSG_out.group_id}}" 

    - name: Creating Nginx web01
      ec2:
        key_name: appstack
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: Ansible-Devops
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: Ansible-Devops
          Owner: DevOps Team
        group_id: "{{appStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out

    - name: Creating tomcat app01
      ec2:
        key_name: appstack
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: Ansible-Devops
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: Ansible-Devops
          Owner: DevOps Team
        group_id: "{{appStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out      
  
    - name: Creating memcache mc01
      ec2:
        key_name: appstack
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mc01"
          Project: Ansible-Devops
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: Ansible-Devops
          Owner: DevOps Team
        group_id: "{{appStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mc01_out

    - name: Creating RabbitMQ rmq01
      ec2:
        key_name: appstack
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "rmq01"
          Project: Ansible-Devops
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "rmq01"
          Project: Ansible-Devops
          Owner: DevOps Team
        group_id: "{{appStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: rmq01_out

    - name: Creating Mysql db01
      ec2:
        key_name: appstack
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: Ansible-Devops
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: Ansible-Devops
          Owner: DevOps Team
        group_id: "{{appStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: db01_out

    - debug:
        var: db01_out.tagged_instances[0].id      